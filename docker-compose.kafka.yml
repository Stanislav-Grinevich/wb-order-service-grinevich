# yaml-language-server: $schema=https://json.schemastore.org/compose-spec.json
services:
  kafka:
    image: bitnami/kafka:3.7
    container_name: demo_kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: controller,broker
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093

      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,PLAINTEXT_INTERNAL://:29092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://host.docker.internal:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER

      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"

      KAFKA_HEAP_OPTS: "-Xms256m -Xmx256m"
    healthcheck:
      test: ["CMD", "bash", "-lc", "/opt/bitnami/kafka/bin/kafka-broker-api-versions.sh --bootstrap-server localhost:9092 >/dev/null 2>&1"]
      interval: 5s
      timeout: 5s
      retries: 40
    restart: unless-stopped

  topic_init_once:
    image: bitnami/kafka:3.7
    container_name: topic_init_once
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/bash","-lc"]
    command: >
      "/opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --create --if-not-exists
      --topic wb_orders --partitions 1 --replication-factor 1 &&
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:29092 --describe --topic wb_orders &&
      sleep 2"